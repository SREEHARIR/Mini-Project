C51 COMPILER V9.54   PILLTEST                                                              03/25/2016 22:23:41 PAGE 1   


C51 COMPILER V9.54, COMPILATION OF MODULE PILLTEST
OBJECT MODULE PLACED IN .\Objects\pilltest.obj
COMPILER INVOKED BY: F:\Application\Keil uVision\C51\BIN\C51.EXE pilltest.c OPTIMIZE(8,SPEED) BROWSE DEBUG OBJECTEXTEND 
                    -PRINT(.\Listings\pilltest.lst) TABS(2) OBJECT(.\Objects\pilltest.obj)

line level    source

   1          #include<reg51.h>
   2          #include<intrins.h>
   3          
   4          sbit RS = P0^0;
   5          sbit EN = P0^1;
   6          sbit D0 = P2^0;
   7          sbit D1 = P2^1;
   8          sbit D2 = P2^2;
   9          sbit D3 = P2^3;
  10          sbit D4 = P2^4;
  11          sbit D5 = P2^5;
  12          sbit D6 = P2^6;
  13          sbit D7 = P2^7;
  14          
  15          sbit scl=P1^0;
  16          sbit sda=P1^1;
  17          
  18          unsigned char mem=0xA0;
  19          unsigned char rtc=0xD0;
  20          
  21          void delay(int i);
  22          void Lcd_Port(char a);
  23          void Lcd_Cmd(char a);
  24          void Lcd_Clear();
  25          void Lcd_Set_Cursor(char a, char b);
  26          void Lcd_Init();
  27          void Lcd_Write_Char(char a);
  28          void Lcd_Write_String(char *a);
  29          void start(void);
  30          void stop();
  31          void write(unsigned char dat);
  32          void ack(void);
  33          void noack(void);
  34          unsigned char read();
  35          void save_i2c(char dev,char addr,char ch);
  36          char read_i2c(char dev,char addr);
  37          
  38          void delay(int i)
  39          {
  40   1        int j;
  41   1        while(i--)
  42   1          for(j=0;j<1000;j++);
  43   1      }
  44          
  45          void Lcd_Port(char a)
  46          {
  47   1        if(a & 1)
  48   1          D0 = 1;
  49   1        else 
  50   1          D0 = 0;
  51   1        
  52   1        if(a & 2)
  53   1          D1 = 1;
  54   1        else
C51 COMPILER V9.54   PILLTEST                                                              03/25/2016 22:23:41 PAGE 2   

  55   1          D1 = 0;
  56   1        
  57   1        if(a & 4)
  58   1          D2 = 1;
  59   1        else
  60   1          D2 = 0;
  61   1        
  62   1        if(a & 8)
  63   1          D3 = 1;
  64   1        else
  65   1          D3 = 0;
  66   1        
  67   1        if(a & 16)
  68   1          D4 = 1;
  69   1        else
  70   1          D4 = 0;
  71   1      
  72   1        if(a & 32)
  73   1          D5 = 1;
  74   1        else
  75   1          D5 = 0;
  76   1        
  77   1        if(a & 64)
  78   1          D6 = 1;
  79   1        else 
  80   1          D6 = 0;
  81   1        
  82   1        if(a & 128)
  83   1          D7 = 1;
  84   1        else
  85   1          D7 = 0;
  86   1      }
  87          void Lcd_Cmd(char a)
  88          { 
  89   1        RS = 0;             // => RS = 0
  90   1        Lcd_Port(a);             //Data transfer
  91   1        EN  = 1;             // => E = 1
  92   1        delay(1);
  93   1        EN  = 0;             // => E = 0
  94   1      }
  95          
  96          void Lcd_Clear()
  97          {
  98   1          Lcd_Cmd(1);
  99   1      }
 100          
 101          void Lcd_Set_Cursor(char a, char b)
 102          {
 103   1        if(a == 1)
 104   1          Lcd_Cmd(0x80 + b);
 105   1        else if(a == 2)
 106   1          Lcd_Cmd(0xC0 + b);
 107   1      }
 108          
 109          void Lcd_Init()
 110          {
 111   1        Lcd_Port(0x00);
 112   1        RS = 0;
 113   1        delay(20);
 114   1        ///////////// Reset process from datasheet /////////
 115   1        Lcd_Cmd(0x30);
 116   1        delay(5);
C51 COMPILER V9.54   PILLTEST                                                              03/25/2016 22:23:41 PAGE 3   

 117   1        Lcd_Cmd(0x30);
 118   1        delay(11);
 119   1        Lcd_Cmd(0x30);
 120   1        /////////////////////////////////////////////////////
 121   1        Lcd_Cmd(0x38);    //function set
 122   1        Lcd_Cmd(0x0C);    //display on,cursor off,blink off
 123   1        Lcd_Cmd(0x01);    //clear display
 124   1        Lcd_Cmd(0x06);    //entry mode, set increment
 125   1      }
 126          
 127          void Lcd_Write_Char(char a)
 128          {
 129   1         RS = 1;             // => RS = 1
 130   1         Lcd_Port(a);             //Data transfer
 131   1         EN  = 1;             // => E = 1
 132   1         delay(1);
 133   1         EN  = 0;             // => E = 04
 134   1      }
 135          
 136          void Lcd_Write_String(char *a)
 137          {
 138   1        int i;
 139   1        for(i=0;a[i]!='\0';i++)
 140   1         Lcd_Write_Char(a[i]);
 141   1      }
 142          void start(void)
 143          {
 144   1        /*to start make
 145   1        high to low of sda with a clock is high
 146   1        */
 147   1        sda=1;
 148   1        scl=1;
 149   1        _nop_();
 150   1        _nop_();  
 151   1        sda=0;
 152   1        scl=0;
 153   1      }
 154          
 155          void stop()
 156          {
 157   1        /* to stop the i2c
 158   1        make an low to high of sda with scl =1*/
 159   1        sda = 0;
 160   1        scl = 1;
 161   1        _nop_();
 162   1        _nop_();
 163   1        sda = 1;
 164   1        scl = 0;
 165   1        delay(10);
 166   1      }
 167          
 168          void write(unsigned char dat)
 169          {
 170   1        unsigned char i;
 171   1        for(i=0;i<8;i++)  
 172   1        {
 173   2          _nop_();
 174   2          _nop_();
 175   2          scl=0;
 176   2          sda=(dat&0x80>>i)?1:0;
 177   2          scl=1;
 178   2        }
C51 COMPILER V9.54   PILLTEST                                                              03/25/2016 22:23:41 PAGE 4   

 179   1      }
 180          
 181          void ack(void)
 182          {
 183   1        scl=0;
 184   1        sda=1;
 185   1        scl=1;
 186   1        _nop_();
 187   1        _nop_();
 188   1        scl=0;
 189   1      }
 190          
 191          void noack(void)
 192          {
 193   1        scl=0;
 194   1        sda=1;
 195   1        scl=1;
 196   1      }
 197          
 198          unsigned char read()
 199          {
 200   1        unsigned char i,buff=0;
 201   1        sda=1;
 202   1      
 203   1        for(i=0;i<8;i++)
 204   1        {
 205   2          scl=1;
 206   2          _nop_();
 207   2          _nop_();
 208   2          if(sda)
 209   2            buff|=(0x80>>i);
 210   2          scl=0;
 211   2        }
 212   1        return buff;
 213   1      }
 214          
 215          
 216          void save_i2c(char dev,char addr,char ch)
 217          {
 218   1        start();
 219   1        write(dev);
 220   1        ack();
 221   1        
 222   1        write(addr);
 223   1        ack();
 224   1      
 225   1        write(ch);
 226   1        ack();
 227   1      
 228   1        stop();
 229   1        delay(10);
 230   1      }
 231          
 232          char read_i2c(char dev,char addr)
 233          {
 234   1        unsigned char buff;
 235   1        start();
 236   1        write(dev);
 237   1        ack();
 238   1      
 239   1        write(addr);
 240   1        ack();
C51 COMPILER V9.54   PILLTEST                                                              03/25/2016 22:23:41 PAGE 5   

 241   1      
 242   1        start();
 243   1        write(dev|1);
 244   1        ack();
 245   1      
 246   1        buff=read();
 247   1      
 248   1        noack();
 249   1        stop();
 250   1        return buff;
 251   1      }
 252          
 253          void main()
 254          {
 255   1        int i;
 256   1        char ch;
 257   1        
 258   1        Lcd_Init();
 259   1        
 260   1        Lcd_Clear();
 261   1        Lcd_Set_Cursor(1,0);
 262   1        Lcd_Write_String("Pill Dispenser 2.1");
 263   1        delay(10);
 264   1        //save_i2c(rtc,0X00,0X00);
 265   1        //save_i2c(rtc,0X01,0X25);
 266   1        //save_i2c(rtc,0X02,0X09);
 267   1        
 268   1        Lcd_Clear();
 269   1        Lcd_Set_Cursor(1,0);
 270   1          
 271   1        for(i=0;i<16;i++)
 272   1        {
 273   2          save_i2c(mem,i,i+'a');
 274   2          ch=read_i2c(mem,i);
 275   2          Lcd_Write_Char(ch) ;
 276   2        }
 277   1        while(1)
 278   1        {
 279   2          Lcd_Set_Cursor(2,0);
 280   2          ch=read_i2c(rtc,0X02);
 281   2          Lcd_Write_Char(ch/16+48);
 282   2          Lcd_Write_Char(ch%16+48);
 283   2          Lcd_Write_Char('-');
 284   2          ch=read_i2c(rtc,0X01);
 285   2          Lcd_Write_Char(ch/16+48);
 286   2          Lcd_Write_Char(ch%16+48);
 287   2          Lcd_Write_Char('-');
 288   2          ch=read_i2c(rtc,0X00);
 289   2          Lcd_Write_Char(ch/16+48);
 290   2          Lcd_Write_Char(ch%16+48);
 291   2        }
 292   1      }


MODULE INFORMATION:   STATIC OVERLAYABLE
   CODE SIZE        =    590    ----
   CONSTANT SIZE    =     19    ----
   XDATA SIZE       =   ----    ----
   PDATA SIZE       =   ----    ----
   DATA SIZE        =      2       6
   IDATA SIZE       =   ----    ----
   BIT SIZE         =   ----    ----
C51 COMPILER V9.54   PILLTEST                                                              03/25/2016 22:23:41 PAGE 6   

END OF MODULE INFORMATION.


C51 COMPILATION COMPLETE.  0 WARNING(S),  0 ERROR(S)
